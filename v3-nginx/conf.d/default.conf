# Nginx configuration for both HTTP and SSL

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {

    listen ${SSL_PORT} ssl;
    listen ${PORT};

    resolver ${DNS_SERVER} valid=5s;
    server_name ${SERVER_NAME};
    set $upstream ${BACKEND};

    ssl_certificate ${PROXY_SSL_CERT};
    ssl_certificate_key ${PROXY_SSL_CERT_KEY};
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_verify_client ${PROXY_SSL_VERIFY};

    ssl_client_certificate /etc/nginx/client_certs/ca.crt;

    location / {

        if ($ssl_client_verify != SUCCESS) {
        return 403;
        }

        client_max_body_size 0;

        proxy_set_header Host $host;
        proxy_set_header Proxy "";
        proxy_set_header Upgrade $connection_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_connect_timeout ${PROXY_TIMEOUT};
        proxy_read_timeout 36000s;
        proxy_redirect off;

        proxy_pass_header Authorization;
        proxy_pass $upstream;

        index index.html index.htm;
        root /usr/share/nginx/html;
    }

    location /healthz {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "OK";
    }

    location /metrics/nginx {
        access_log off;
        allow ${METRICS_ALLOW_FROM};
        deny ${METRICS_DENY_FROM};
        proxy_store off;
        stub_status;
    }

    error_page 500 502 503 504  /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
